(ns ctim.specs.exploit-target-test
  (:require [clojure.spec :as s]
            [clojure.test :refer [deftest is testing use-fixtures]]
            [ctim.schemas.exploit-target :as et]
            [ctim.test-helpers.core :refer [fixture-spec-validation]]
            [ctim.examples.exploit-targets :as e]
            [flanders.spec :as fs]))

(use-fixtures :once fixture-spec-validation)

(def kwns "exploit-target")

(deftest test-exploit-target-spec
  (testing "example with all possible fields"
    (is (s/assert
         (fs/->spec et/ExploitTarget kwns)
         e/exploit-target-maximal)))

  (testing "example with only required fields"
    (is (s/assert
         (fs/->spec et/ExploitTarget kwns)
         e/exploit-target-minimal))))

(deftest test-new-exploit-target-spec
  (testing "example with all possible fields"
    (is (s/assert
         (fs/->spec et/NewExploitTarget kwns)
         e/new-exploit-target-maximal)))

  (testing "example with only required fields"
    (is (s/assert
         (fs/->spec et/NewExploitTarget kwns)
         e/new-exploit-target-minimal))))

(deftest test-stored-exploit-target-spec
  (testing "example with all possible fields"
    (is (s/assert
         (fs/->spec et/StoredExploitTarget kwns)
         e/stored-exploit-target-maximal)))

  (testing "example with only required fields"
    (is (s/assert
         (fs/->spec et/StoredExploitTarget kwns)
         e/stored-exploit-target-minimal))))
